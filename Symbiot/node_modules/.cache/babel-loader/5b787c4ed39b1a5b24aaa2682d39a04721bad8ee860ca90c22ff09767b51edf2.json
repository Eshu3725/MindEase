{"ast":null,"code":"var _jsxFileName = \"F:\\\\Symbiot25\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api'; // Update with your actual backend URL\n\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hi there! I'm your AI companion. How can I help you today?\",\n    sender: 'bot'\n  }]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [mood, setMood] = useState('');\n\n  // Get current user's mood from localStorage if available\n  useEffect(() => {\n    const savedMood = localStorage.getItem('selectedMood');\n    if (savedMood) {\n      try {\n        const parsedMood = JSON.parse(savedMood);\n        setMood(parsedMood.label);\n      } catch (e) {\n        console.error('Error parsing mood:', e);\n      }\n    }\n  }, []);\n\n  // Auto-scroll to bottom of messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Get user ID for conversation tracking\n  const getUserId = () => {\n    const user = auth.currentUser;\n    return user ? user.uid : 'anonymous';\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const userInput = input;\n    setInput('');\n    setIsTyping(true);\n    setError(null);\n    try {\n      console.log('Sending request to:', `${API_URL}/ai/analyze-emotion`);\n      console.log('User input:', userInput);\n\n      // First, analyze the emotion in the message\n      const emotionResponse = await fetch(`${API_URL}/ai/analyze-emotion`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: userInput\n        })\n      });\n      console.log('Emotion response status:', emotionResponse.status);\n      if (!emotionResponse.ok) {\n        const errorText = await emotionResponse.text();\n        console.error('Emotion analysis error response:', errorText);\n        throw new Error(`Failed to analyze emotion: ${emotionResponse.status} ${errorText}`);\n      }\n      const emotionData = await emotionResponse.json();\n      console.log('Emotion data:', emotionData);\n\n      // Then, send the message to the AI chatbot with emotion context\n      const chatResponse = await fetch(`${API_URL}/ai/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userInput,\n          userId: getUserId(),\n          mood: mood || emotionData.primaryEmotion,\n          emotionIntensity: emotionData.intensity\n        })\n      });\n      if (!chatResponse.ok) {\n        throw new Error('Failed to get response from AI');\n      }\n      const data = await chatResponse.json();\n\n      // Add AI response to messages\n      setMessages(prev => [...prev, {\n        text: data.response,\n        sender: 'bot',\n        emotion: emotionData.primaryEmotion,\n        suggestion: emotionData.suggestion\n      }]);\n    } catch (err) {\n      console.error('Error communicating with AI:', err);\n      setError('Sorry, I had trouble responding. Please try again.');\n      setMessages(prev => [...prev, {\n        text: 'Sorry, I had trouble responding. Please try again.',\n        sender: 'bot',\n        isError: true\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-[#66FCF1] mb-6\",\n      children: \"\\uD83E\\uDD16 AI Companion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), mood && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 bg-[#1F2833] p-3 rounded-lg text-[#CFC6C7] flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: \"Current mood:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-[#66FCF1] font-medium\",\n        children: mood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#1F2833] rounded-xl shadow-lg overflow-hidden flex flex-col h-[70vh]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[80%] rounded-xl p-3 ${message.sender === 'user' ? 'bg-[#45A29E] text-white' : message.isError ? 'bg-red-900/30 text-[#CFC6C7] border border-red-700' : 'bg-[#0B0C10] text-[#CFC6C7]'}`,\n            children: [message.text, message.sender === 'bot' && message.emotion && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 pt-2 border-t border-[#45A29E]/30 text-xs text-[#66FCF1]/70\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Detected emotion: \", message.emotion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this), message.suggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 italic\",\n                children: message.suggestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-[#0B0C10] text-[#CFC6C7] rounded-xl p-3 max-w-[80%]\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\",\n                style: {\n                  animationDelay: '0ms'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\",\n                style: {\n                  animationDelay: '300ms'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\",\n                style: {\n                  animationDelay: '600ms'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-red-400 text-sm py-2\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 border-t border-[#45A29E] bg-[#0B0C10]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"Type your message...\",\n            className: \"flex-1 bg-[#1F2833] text-[#CFC6C7] p-3 rounded-l-lg focus:outline-none focus:ring-1 focus:ring-[#66FCF1]\",\n            disabled: isTyping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `px-4 rounded-r-lg font-semibold transition-colors ${isTyping ? 'bg-gray-500 text-gray-300 cursor-not-allowed' : 'bg-[#66FCF1] text-[#0B0C10] hover:bg-[#45A29E]'}`,\n            disabled: isTyping,\n            children: isTyping ? 'Thinking...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"5zD9or6twyflJhzScO8ze64MgOI=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","auth","jsxDEV","_jsxDEV","API_URL","Chatbot","_s","messages","setMessages","text","sender","input","setInput","isTyping","setIsTyping","error","setError","messagesEndRef","mood","setMood","savedMood","localStorage","getItem","parsedMood","JSON","parse","label","e","console","_messagesEndRef$curre","current","scrollIntoView","behavior","getUserId","user","currentUser","uid","handleSendMessage","preventDefault","trim","userMessage","prev","userInput","log","emotionResponse","fetch","method","headers","body","stringify","status","ok","errorText","Error","emotionData","json","chatResponse","message","userId","primaryEmotion","emotionIntensity","intensity","data","response","emotion","suggestion","err","isError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","animationDelay","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["F:/Symbiot25/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { auth } from '../firebase';\n\nconst API_URL = 'http://localhost:5000/api'; // Update with your actual backend URL\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    {\n      text: \"Hi there! I'm your AI companion. How can I help you today?\",\n      sender: 'bot'\n    }\n  ]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [mood, setMood] = useState('');\n\n  // Get current user's mood from localStorage if available\n  useEffect(() => {\n    const savedMood = localStorage.getItem('selectedMood');\n    if (savedMood) {\n      try {\n        const parsedMood = JSON.parse(savedMood);\n        setMood(parsedMood.label);\n      } catch (e) {\n        console.error('Error parsing mood:', e);\n      }\n    }\n  }, []);\n\n  // Auto-scroll to bottom of messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Get user ID for conversation tracking\n  const getUserId = () => {\n    const user = auth.currentUser;\n    return user ? user.uid : 'anonymous';\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage = { text: input, sender: 'user' };\n    setMessages(prev => [...prev, userMessage]);\n\n    const userInput = input;\n    setInput('');\n    setIsTyping(true);\n    setError(null);\n\n    try {\n      console.log('Sending request to:', `${API_URL}/ai/analyze-emotion`);\n      console.log('User input:', userInput);\n\n      // First, analyze the emotion in the message\n      const emotionResponse = await fetch(`${API_URL}/ai/analyze-emotion`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          text: userInput\n        }),\n      });\n\n      console.log('Emotion response status:', emotionResponse.status);\n\n      if (!emotionResponse.ok) {\n        const errorText = await emotionResponse.text();\n        console.error('Emotion analysis error response:', errorText);\n        throw new Error(`Failed to analyze emotion: ${emotionResponse.status} ${errorText}`);\n      }\n\n      const emotionData = await emotionResponse.json();\n      console.log('Emotion data:', emotionData);\n\n      // Then, send the message to the AI chatbot with emotion context\n      const chatResponse = await fetch(`${API_URL}/ai/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userInput,\n          userId: getUserId(),\n          mood: mood || emotionData.primaryEmotion,\n          emotionIntensity: emotionData.intensity\n        }),\n      });\n\n      if (!chatResponse.ok) {\n        throw new Error('Failed to get response from AI');\n      }\n\n      const data = await chatResponse.json();\n\n      // Add AI response to messages\n      setMessages(prev => [...prev, {\n        text: data.response,\n        sender: 'bot',\n        emotion: emotionData.primaryEmotion,\n        suggestion: emotionData.suggestion\n      }]);\n    } catch (err) {\n      console.error('Error communicating with AI:', err);\n      setError('Sorry, I had trouble responding. Please try again.');\n      setMessages(prev => [...prev, {\n        text: 'Sorry, I had trouble responding. Please try again.',\n        sender: 'bot',\n        isError: true\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <h1 className=\"text-3xl font-bold text-[#66FCF1] mb-6\">🤖 AI Companion</h1>\n\n      {mood && (\n        <div className=\"mb-4 bg-[#1F2833] p-3 rounded-lg text-[#CFC6C7] flex items-center\">\n          <span className=\"mr-2\">Current mood:</span>\n          <span className=\"text-[#66FCF1] font-medium\">{mood}</span>\n        </div>\n      )}\n\n      <div className=\"bg-[#1F2833] rounded-xl shadow-lg overflow-hidden flex flex-col h-[70vh]\">\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n          {messages.map((message, index) => (\n            <div\n              key={index}\n              className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n            >\n              <div\n                className={`max-w-[80%] rounded-xl p-3 ${\n                  message.sender === 'user'\n                    ? 'bg-[#45A29E] text-white'\n                    : message.isError\n                      ? 'bg-red-900/30 text-[#CFC6C7] border border-red-700'\n                      : 'bg-[#0B0C10] text-[#CFC6C7]'\n                }`}\n              >\n                {message.text}\n\n                {/* Show emotion analysis and suggestion for bot messages */}\n                {message.sender === 'bot' && message.emotion && (\n                  <div className=\"mt-2 pt-2 border-t border-[#45A29E]/30 text-xs text-[#66FCF1]/70\">\n                    <div>Detected emotion: {message.emotion}</div>\n                    {message.suggestion && (\n                      <div className=\"mt-1 italic\">{message.suggestion}</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n\n          {/* Typing indicator */}\n          {isTyping && (\n            <div className=\"flex justify-start\">\n              <div className=\"bg-[#0B0C10] text-[#CFC6C7] rounded-xl p-3 max-w-[80%]\">\n                <div className=\"flex space-x-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\" style={{ animationDelay: '0ms' }}></div>\n                  <div className=\"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\" style={{ animationDelay: '300ms' }}></div>\n                  <div className=\"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\" style={{ animationDelay: '600ms' }}></div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Error message */}\n          {error && (\n            <div className=\"text-center text-red-400 text-sm py-2\">\n              {error}\n            </div>\n          )}\n\n          {/* Auto-scroll reference */}\n          <div ref={messagesEndRef} />\n        </div>\n\n        <form onSubmit={handleSendMessage} className=\"p-4 border-t border-[#45A29E] bg-[#0B0C10]\">\n          <div className=\"flex\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message...\"\n              className=\"flex-1 bg-[#1F2833] text-[#CFC6C7] p-3 rounded-l-lg focus:outline-none focus:ring-1 focus:ring-[#66FCF1]\"\n              disabled={isTyping}\n            />\n            <button\n              type=\"submit\"\n              className={`px-4 rounded-r-lg font-semibold transition-colors ${\n                isTyping\n                  ? 'bg-gray-500 text-gray-300 cursor-not-allowed'\n                  : 'bg-[#66FCF1] text-[#0B0C10] hover:bg-[#45A29E]'\n              }`}\n              disabled={isTyping}\n            >\n              {isTyping ? 'Thinking...' : 'Send'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}