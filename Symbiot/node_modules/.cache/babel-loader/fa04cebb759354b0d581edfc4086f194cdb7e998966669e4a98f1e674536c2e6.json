{"ast":null,"code":"// Import the functions you need from the SDKs\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, GoogleAuthProvider, FacebookAuthProvider, TwitterAuthProvider, signInWithPopup, getIdToken } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc, updateDoc, getDoc } from \"firebase/firestore\";\n\n// Your Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATSN1sAjas0MiKmo6RDMdUCZ1aXZReBus\",\n  authDomain: \"authentication-4e3bb.firebaseapp.com\",\n  projectId: \"authentication-4e3bb\",\n  storageBucket: \"authentication-4e3bb.appspot.com\",\n  messagingSenderId: \"433153429402\",\n  appId: \"1:433153429402:web:2682b2a3ac9eb5d4bab423\",\n  measurementId: \"G-19LMVXM39P\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// Initialize Auth Providers\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.addScope('profile');\ngoogleProvider.addScope('email');\n\n// Facebook provider with custom parameters\nconst facebookProvider = new FacebookAuthProvider();\nfacebookProvider.addScope('email');\nfacebookProvider.addScope('public_profile');\n// Add custom parameters for Facebook login\nfacebookProvider.setCustomParameters({\n  'display': 'popup'\n});\n\n// Twitter provider with custom parameters\nconst twitterProvider = new TwitterAuthProvider();\n// Add custom parameters for Twitter login\ntwitterProvider.setCustomParameters({\n  'lang': 'en'\n});\nexport { auth, db, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, doc, setDoc, updateDoc, getDoc, googleProvider, facebookProvider, twitterProvider, signInWithPopup, getIdToken };","map":{"version":3,"names":["initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","signInWithPopup","getIdToken","getFirestore","doc","setDoc","updateDoc","getDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","googleProvider","addScope","facebookProvider","setCustomParameters","twitterProvider"],"sources":["F:/MindEase/Symbiot/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  GoogleAuthProvider,\n  FacebookAuthProvider,\n  TwitterAuthProvider,\n  signInWithPopup,\n  getIdToken\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  updateDoc,\n  getDoc\n} from \"firebase/firestore\";\n\n// Your Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyATSN1sAjas0MiKmo6RDMdUCZ1aXZReBus\",\n  authDomain: \"authentication-4e3bb.firebaseapp.com\",\n  projectId: \"authentication-4e3bb\",\n  storageBucket: \"authentication-4e3bb.appspot.com\",\n  messagingSenderId: \"433153429402\",\n  appId: \"1:433153429402:web:2682b2a3ac9eb5d4bab423\",\n  measurementId: \"G-19LMVXM39P\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// Initialize Auth Providers\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.addScope('profile');\ngoogleProvider.addScope('email');\n\n// Facebook provider with custom parameters\nconst facebookProvider = new FacebookAuthProvider();\nfacebookProvider.addScope('email');\nfacebookProvider.addScope('public_profile');\n// Add custom parameters for Facebook login\nfacebookProvider.setCustomParameters({\n  'display': 'popup'\n});\n\n// Twitter provider with custom parameters\nconst twitterProvider = new TwitterAuthProvider();\n// Add custom parameters for Twitter login\ntwitterProvider.setCustomParameters({\n  'lang': 'en'\n});\n\nexport {\n  auth,\n  db,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  doc,\n  setDoc,\n  updateDoc,\n  getDoc,\n  googleProvider,\n  facebookProvider,\n  twitterProvider,\n  signInWithPopup,\n  getIdToken\n};\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,sBAAsB,EACtBC,kBAAkB,EAClBC,oBAAoB,EACpBC,mBAAmB,EACnBC,eAAe,EACfC,UAAU,QACL,eAAe;AACtB,SACEC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,SAAS,EACTC,MAAM,QACD,oBAAoB;;AAE3B;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,sCAAsC;EAClDC,SAAS,EAAE,sBAAsB;EACjCC,aAAa,EAAE,kCAAkC;EACjDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGvB,aAAa,CAACe,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGvB,OAAO,CAACsB,GAAG,CAAC;AACzB,MAAME,EAAE,GAAGf,YAAY,CAACa,GAAG,CAAC;;AAE5B;AACA,MAAMG,cAAc,GAAG,IAAIrB,kBAAkB,CAAC,CAAC;AAC/CqB,cAAc,CAACC,QAAQ,CAAC,SAAS,CAAC;AAClCD,cAAc,CAACC,QAAQ,CAAC,OAAO,CAAC;;AAEhC;AACA,MAAMC,gBAAgB,GAAG,IAAItB,oBAAoB,CAAC,CAAC;AACnDsB,gBAAgB,CAACD,QAAQ,CAAC,OAAO,CAAC;AAClCC,gBAAgB,CAACD,QAAQ,CAAC,gBAAgB,CAAC;AAC3C;AACAC,gBAAgB,CAACC,mBAAmB,CAAC;EACnC,SAAS,EAAE;AACb,CAAC,CAAC;;AAEF;AACA,MAAMC,eAAe,GAAG,IAAIvB,mBAAmB,CAAC,CAAC;AACjD;AACAuB,eAAe,CAACD,mBAAmB,CAAC;EAClC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,SACEL,IAAI,EACJC,EAAE,EACFvB,8BAA8B,EAC9BC,0BAA0B,EAC1BC,sBAAsB,EACtBO,GAAG,EACHC,MAAM,EACNC,SAAS,EACTC,MAAM,EACNY,cAAc,EACdE,gBAAgB,EAChBE,eAAe,EACftB,eAAe,EACfC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}