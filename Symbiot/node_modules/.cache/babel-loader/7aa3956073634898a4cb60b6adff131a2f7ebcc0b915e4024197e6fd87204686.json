{"ast":null,"code":"var _jsxFileName = \"F:\\\\MindEase\\\\Symbiot\\\\src\\\\components\\\\MoodSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodSelector = ({\n  onMoodSelect\n}) => {\n  _s();\n  const moods = [{\n    emoji: '😊',\n    label: 'Happy'\n  }, {\n    emoji: '😐',\n    label: 'Neutral'\n  }, {\n    emoji: '😢',\n    label: 'Sad'\n  }, {\n    emoji: '😡',\n    label: 'Angry'\n  }, {\n    emoji: '😴',\n    label: 'Tired'\n  }];\n  const [selectedMood, setSelectedMood] = useState(null);\n\n  // Load saved mood from localStorage on first mount\n  useEffect(() => {\n    const saved = localStorage.getItem('selectedMood');\n    if (saved) {\n      const parsedMood = JSON.parse(saved);\n      setSelectedMood(parsedMood);\n      if (onMoodSelect) onMoodSelect(parsedMood.label);\n    }\n  }, [onMoodSelect]);\n  const handleMoodClick = mood => {\n    setSelectedMood(mood);\n    localStorage.setItem('selectedMood', JSON.stringify(mood));\n    if (onMoodSelect) onMoodSelect(mood.label);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-6 text-5xl my-4\",\n      children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodClick(mood),\n        className: `transition-transform transform hover:scale-110 ${(selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.label) === mood.label ? 'ring-4 ring-[#66FCF1] rounded-full' : ''}`,\n        title: mood.label,\n        \"aria-label\": `Select mood: ${mood.label}`,\n        children: mood.emoji\n      }, mood.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectedMood && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-lg text-[#66FCF1]\",\n      children: [\"You're feeling \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedMood.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }, this), \" today\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodSelector, \"VgtxgDMy4YpPp+70pnTeHecSBzU=\");\n_c = MoodSelector;\nexport default MoodSelector;\nvar _c;\n$RefreshReg$(_c, \"MoodSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MoodSelector","onMoodSelect","_s","moods","emoji","label","selectedMood","setSelectedMood","saved","localStorage","getItem","parsedMood","JSON","parse","handleMoodClick","mood","setItem","stringify","className","children","map","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/MindEase/Symbiot/src/components/MoodSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MoodSelector = ({ onMoodSelect }) => {\n  const moods = [\n    { emoji: '😊', label: 'Happy' },\n    { emoji: '😐', label: 'Neutral' },\n    { emoji: '😢', label: 'Sad' },\n    { emoji: '😡', label: 'Angry' },\n    { emoji: '😴', label: 'Tired' },\n  ];\n\n  const [selectedMood, setSelectedMood] = useState(null);\n\n  // Load saved mood from localStorage on first mount\n  useEffect(() => {\n    const saved = localStorage.getItem('selectedMood');\n    if (saved) {\n      const parsedMood = JSON.parse(saved);\n      setSelectedMood(parsedMood);\n      if (onMoodSelect) onMoodSelect(parsedMood.label);\n    }\n  }, [onMoodSelect]);\n\n  const handleMoodClick = (mood) => {\n    setSelectedMood(mood);\n    localStorage.setItem('selectedMood', JSON.stringify(mood));\n    if (onMoodSelect) onMoodSelect(mood.label);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <div className=\"flex space-x-6 text-5xl my-4\">\n        {moods.map((mood) => (\n          <button\n            key={mood.label}\n            onClick={() => handleMoodClick(mood)}\n            className={`transition-transform transform hover:scale-110 ${\n              selectedMood?.label === mood.label ? 'ring-4 ring-[#66FCF1] rounded-full' : ''\n            }`}\n            title={mood.label}\n            aria-label={`Select mood: ${mood.label}`}\n          >\n            {mood.emoji}\n          </button>\n        ))}\n      </div>\n      {selectedMood && (\n        <p className=\"mt-4 text-lg text-[#66FCF1]\">\n          You're feeling <strong>{selectedMood.label}</strong> today\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default MoodSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAMC,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC/B;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAU,CAAC,EACjC;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC7B;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC/B;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAQ,CAAC,CAChC;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAIF,KAAK,EAAE;MACT,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC;MACpCD,eAAe,CAACI,UAAU,CAAC;MAC3B,IAAIV,YAAY,EAAEA,YAAY,CAACU,UAAU,CAACN,KAAK,CAAC;IAClD;EACF,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAMa,eAAe,GAAIC,IAAI,IAAK;IAChCR,eAAe,CAACQ,IAAI,CAAC;IACrBN,YAAY,CAACO,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACK,SAAS,CAACF,IAAI,CAAC,CAAC;IAC1D,IAAId,YAAY,EAAEA,YAAY,CAACc,IAAI,CAACV,KAAK,CAAC;EAC5C,CAAC;EAED,oBACEN,OAAA;IAAKmB,SAAS,EAAC,2CAA2C;IAAAC,QAAA,gBACxDpB,OAAA;MAAKmB,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAC1ChB,KAAK,CAACiB,GAAG,CAAEL,IAAI,iBACdhB,OAAA;QAEEsB,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAACC,IAAI,CAAE;QACrCG,SAAS,EAAE,kDACT,CAAAZ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAED,KAAK,MAAKU,IAAI,CAACV,KAAK,GAAG,oCAAoC,GAAG,EAAE,EAC7E;QACHiB,KAAK,EAAEP,IAAI,CAACV,KAAM;QAClB,cAAY,gBAAgBU,IAAI,CAACV,KAAK,EAAG;QAAAc,QAAA,EAExCJ,IAAI,CAACX;MAAK,GARNW,IAAI,CAACV,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAST,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLpB,YAAY,iBACXP,OAAA;MAAGmB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,GAAC,iBAC1B,eAAApB,OAAA;QAAAoB,QAAA,EAASb,YAAY,CAACD;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,UACtD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnDIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAqDlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}