{"ast":null,"code":"var _jsxFileName = \"F:\\\\Symbtest\\\\src\\\\components\\\\AICompanion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { auth, db, doc, getDoc } from '../firebase';\nimport { analyzeTextMood } from '../services/textMoodAnalysisService';\nimport { fetchCourseContent } from '../services/courseContentService';\nimport { getCachedItem, setCachedItem } from '../utils/cacheUtil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AICompanion = () => {\n  _s();\n  const [userCourse, setUserCourse] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [moodAnalysis, setMoodAnalysis] = useState(null);\n  const [recommendations, setRecommendations] = useState(null);\n  const [showRecommendations, setShowRecommendations] = useState(false);\n  const [conversationContext, setConversationContext] = useState({\n    previousMoods: [],\n    lastResponseType: null,\n    repetitiveResponseCount: 0,\n    topicsFocused: []\n  });\n  const messagesEndRef = useRef(null);\n\n  // Fetch user's course from Firebase\n  useEffect(() => {\n    const fetchUserCourse = async () => {\n      try {\n        const user = auth.currentUser;\n        if (!user) {\n          console.log('No user logged in');\n          return;\n        }\n\n        // Get user data from Firestore\n        const userDoc = await getDoc(doc(db, \"users\", user.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setUserCourse(userData.course || '');\n        } else {\n          console.log('No user data found');\n        }\n      } catch (error) {\n        console.error('Error fetching user course:', error);\n      }\n    };\n    fetchUserCourse();\n  }, []);\n\n  // Scroll to bottom of messages when messages change\n  useEffect(() => {\n    // Using a timeout to ensure the DOM has updated\n    const timeoutId = setTimeout(() => {\n      if (messagesEndRef.current) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }, 100);\n    return () => clearTimeout(timeoutId);\n  }, [messages.length]); // Only depend on the length of messages\n\n  // Initial greeting\n  useEffect(() => {\n    setMessages([{\n      type: 'ai',\n      text: \"Hi there! I'm your AI learning companion. How are you feeling today? Tell me about your mood or what's on your mind, and I'll recommend study approaches that might work best for you right now.\"\n    }]);\n  }, []);\n\n  // Handle sending a message\n  const handleSendMessage = async () => {\n    if (!userInput.trim()) return;\n    const userMessage = {\n      type: 'user',\n      text: userInput\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    setIsLoading(true);\n    try {\n      // Analyze the user's mood from their message\n      const analysis = analyzeTextMood(userInput);\n      setMoodAnalysis(analysis);\n\n      // Update conversation context with new mood\n      setConversationContext(prevContext => {\n        const updatedPreviousMoods = [...prevContext.previousMoods, analysis.mood].slice(-3); // Keep last 3 moods\n\n        // Check if we're getting repetitive responses\n        const isRepetitive = prevContext.lastResponseType === analysis.mood;\n        const repetitiveCount = isRepetitive ? prevContext.repetitiveResponseCount + 1 : 0;\n\n        // Extract potential topics from user input\n        const topicMatches = userInput.match(/\\b(study|learn|read|understand|practice|exam|test|quiz|homework|assignment|project|course|class|subject|topic)\\b/gi) || [];\n        const uniqueTopics = [...new Set([...prevContext.topicsFocused, ...topicMatches])].slice(-5); // Keep last 5 topics\n\n        return {\n          previousMoods: updatedPreviousMoods,\n          lastResponseType: analysis.mood,\n          repetitiveResponseCount: repetitiveCount,\n          topicsFocused: uniqueTopics\n        };\n      });\n\n      // Fetch content recommendations based on mood and course\n      let content = null;\n      if (userCourse) {\n        try {\n          // Create cache key\n          const cacheKey = `content_${userCourse}_${analysis.mood}`;\n\n          // Check cache first\n          content = getCachedItem(cacheKey);\n          if (!content) {\n            // Fetch fresh content\n            content = await fetchCourseContent(userCourse, analysis.mood);\n\n            // Cache the result\n            setCachedItem(cacheKey, content);\n          }\n          setRecommendations(content);\n        } catch (error) {\n          console.error('Error fetching recommendations:', error);\n          // Continue even if recommendations fail\n        }\n      }\n\n      // Generate AI response based on mood analysis\n      setTimeout(() => {\n        const aiResponse = generateResponse(analysis, userCourse, conversationContext);\n        setMessages(prev => [...prev, {\n          type: 'ai',\n          text: aiResponse\n        }]);\n        setIsLoading(false);\n        if (content) {\n          setShowRecommendations(true);\n        }\n      }, 1000);\n    } catch (error) {\n      console.error('Error in message processing:', error);\n\n      // Fallback response for error cases\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          type: 'ai',\n          text: \"I'm having trouble understanding your mood right now. Could you tell me more about how you're feeling?\"\n        }]);\n        setIsLoading(false);\n      }, 1000);\n    }\n  };\n\n  // Generate AI response based on mood analysis\n  const generateResponse = (analysis, course, context) => {\n    var _context$topicsFocuse;\n    const {\n      mood,\n      description,\n      recommendedApproaches\n    } = analysis;\n\n    // Get a random response template based on mood\n    const getRandomResponse = templates => {\n      const randomIndex = Math.floor(Math.random() * templates.length);\n      return templates[randomIndex];\n    };\n\n    // Response templates for different moods\n    const responseTemplates = {\n      sad: [`I'm sorry to hear that you're feeling down. ${description}`, `It sounds like you're having a tough time. When feeling sad, ${description}`, `I understand that sadness can make studying difficult. ${description}`],\n      angry: [`I can sense some frustration in your message. ${description}`, `It seems like you might be feeling annoyed or angry. ${description}`, `When we're feeling frustrated, ${description}`],\n      fearful: [`I notice you might be feeling anxious or worried. ${description}`, `It sounds like you might be experiencing some anxiety. ${description}`, `When feeling uncertain or fearful, ${description}`],\n      disgusted: [`I sense you're feeling averse to something. ${description}`, `It seems like something might be bothering you. ${description}`, `When feeling put off by something, ${description}`],\n      happy: [`That's wonderful! I'm glad you're feeling good. ${description}`, `It's great to hear you're in a positive mood! ${description}`, `Your positive energy is perfect for learning. ${description}`],\n      excited: [`I can feel your enthusiasm! ${description}`, `Your excitement is contagious! ${description}`, `That's great! Your excited state is perfect for tackling challenging material. ${description}`],\n      content: [`It's nice to hear you're feeling content. ${description}`, `A content state of mind is excellent for thoughtful learning. ${description}`, `Being content creates a great foundation for learning. ${description}`],\n      surprised: [`Oh! Something unexpected on your mind? ${description}`, `Surprise can lead to new insights! ${description}`, `Interesting! Surprise often opens us to new perspectives. ${description}`],\n      confused: [`I understand confusion can be frustrating. ${description}`, `When we're confused, it helps to go back to basics. ${description}`, `Confusion is often a step toward deeper understanding. ${description}`],\n      stressed: [`I can tell you might be feeling overwhelmed. ${description}`, `Stress can make learning challenging. ${description}`, `When we're stressed, it helps to break things down into smaller steps. ${description}`],\n      neutral: [`I sense you're in a balanced state of mind. ${description}`, `Your neutral mood is actually great for analytical thinking. ${description}`, `A neutral state can be perfect for objective learning. ${description}`],\n      curious: [`Your curiosity is a powerful learning tool! ${description}`, `I love your inquisitive mindset! ${description}`, `Curiosity drives discovery and learning. ${description}`],\n      motivated: [`I can sense your motivation! ${description}`, `Your drive to learn is inspiring! ${description}`, `That motivated mindset will take you far! ${description}`]\n    };\n\n    // Check for repetitive responses\n    if (context && context.repetitiveResponseCount > 1) {\n      // If we've given similar responses multiple times, change the approach\n      const varietyResponses = [`I notice we've been talking about similar moods. Let's try a different approach.`, `Let's explore something new this time.`, `I'd like to offer a fresh perspective on your learning.`];\n      let response = `${getRandomResponse(varietyResponses)} `;\n\n      // Suggest a completely different learning approach\n      const learningApproaches = [\"try a completely different learning environment\", \"consider taking a short break before returning to your studies\", \"experiment with a new study technique like the Pomodoro method\", \"try explaining the concepts to someone else or even to an imaginary student\", \"create visual maps or diagrams of the material\", \"record yourself explaining difficult concepts and listen back\", \"find real-world applications for what you're learning\"];\n      response += `One idea might be to ${learningApproaches[Math.floor(Math.random() * learningApproaches.length)]}. `;\n\n      // Add course-specific information if available\n      if (course) {\n        response += `Would you like me to suggest some specific ${course} resources that align with this approach?`;\n      } else {\n        response += `Would you like to tell me more about what you're studying so I can provide more specific suggestions?`;\n      }\n      return response;\n    }\n\n    // Check for mood shifts\n    if (context && context.previousMoods.length > 1 && context.previousMoods[context.previousMoods.length - 1] !== context.previousMoods[context.previousMoods.length - 2]) {\n      const previousMood = context.previousMoods[context.previousMoods.length - 2];\n      const currentMood = mood;\n\n      // If there's been a significant mood shift\n      if ((previousMood === 'sad' || previousMood === 'angry' || previousMood === 'fearful') && (currentMood === 'happy' || currentMood === 'excited' || currentMood === 'content')) {\n        // Positive shift\n        const positiveShiftResponses = [`I'm glad to see your mood has improved! This positive shift can be great for learning.`, `It's wonderful to see you're feeling better now. This change in mood can open up new learning opportunities.`, `That's a positive change in your mood! Let's take advantage of this energy.`];\n        let response = `${getRandomResponse(positiveShiftResponses)} `;\n\n        // Add specific learning approach recommendations\n        if (recommendedApproaches && recommendedApproaches.length > 0) {\n          const approach = recommendedApproaches[Math.floor(Math.random() * recommendedApproaches.length)];\n          response += `With this positive energy, you might find it effective to ${approach.toLowerCase()}. `;\n        }\n\n        // Add course-specific information\n        if (course) {\n          response += `I've selected some ${course} resources that can help you maintain this positive momentum.`;\n        } else {\n          response += 'Would you like some specific study suggestions that work well with your current positive state?';\n        }\n        return response;\n      }\n      if ((previousMood === 'happy' || previousMood === 'excited' || previousMood === 'content') && (currentMood === 'sad' || currentMood === 'angry' || currentMood === 'fearful')) {\n        // Negative shift\n        const negativeShiftResponses = [\"I notice your mood seems to have shifted. That's completely normal and happens to everyone.\", \"It seems like your feelings have changed since we last talked. Learning can be affected by these shifts.\", \"I can sense a change in your mood. Let's adjust our approach accordingly.\"];\n        let response = `${getRandomResponse(negativeShiftResponses)} `;\n\n        // Add gentle suggestions\n        const gentleApproaches = [\"take a short break if you need one\", \"be kind to yourself during challenging moments\", \"break your work into smaller, more manageable pieces\", \"focus on just one small task at a time\", \"remember that it's okay to progress slowly sometimes\"];\n        response += `When your mood changes like this, it can help to ${gentleApproaches[Math.floor(Math.random() * gentleApproaches.length)]}. `;\n\n        // Add course-specific information\n        if (course) {\n          response += `I have some gentle ${course} resources that might be more suitable right now.`;\n        } else {\n          response += `Would you like to share what you're working on? I might be able to suggest some specific approaches.`;\n        }\n        return response;\n      }\n    }\n\n    // Reference topics if they've been mentioned before\n    let topicReference = '';\n    if ((context === null || context === void 0 ? void 0 : (_context$topicsFocuse = context.topicsFocused) === null || _context$topicsFocuse === void 0 ? void 0 : _context$topicsFocuse.length) > 0) {\n      const recentTopic = context.topicsFocused[context.topicsFocused.length - 1];\n      if (recentTopic) {\n        const topicReferences = [`Regarding your interest in ${recentTopic}, `, `Since you mentioned ${recentTopic} earlier, `, `Thinking about ${recentTopic}, `];\n        topicReference = getRandomResponse(topicReferences);\n      }\n    }\n\n    // Standard response flow\n    const templates = responseTemplates[mood] || responseTemplates.neutral;\n    let response = `${getRandomResponse(templates)} `;\n\n    // Add topic reference if available\n    if (topicReference) {\n      response += topicReference;\n    }\n\n    // Add specific learning approach recommendations\n    if (recommendedApproaches && recommendedApproaches.length > 0) {\n      const approach = recommendedApproaches[Math.floor(Math.random() * recommendedApproaches.length)];\n      response += `One effective approach might be to ${approach.toLowerCase()}. `;\n    }\n\n    // Add course-specific information if available\n    if (course) {\n      const courseResponses = [`Since you're studying ${course}, I've prepared some learning resources that might work well with your current mood.`, `For your ${course} studies, I've found some materials that align with your current learning style.`, `I've selected some ${course} resources that complement how you're feeling right now.`];\n      response += getRandomResponse(courseResponses);\n    } else {\n      const generalResponses = [`I'd recommend focusing on ${analysis.learningStyle.toLowerCase()} right now. Would you like some specific study suggestions?`, `Given your current state, ${analysis.learningStyle.toLowerCase()} might be most effective. Would you like to explore this approach?`, `This might be a good time for ${analysis.learningStyle.toLowerCase()}. Would you like me to elaborate on this?`];\n      response += getRandomResponse(generalResponses);\n    }\n    return response;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#1F2833] rounded-lg overflow-hidden flex flex-col h-[600px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#0B0C10] p-4 border-b border-[#45A29E]\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-[#66FCF1] font-medium\",\n        children: \"AI Learning Companion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-[#CFC6C7] text-sm\",\n        children: \"Share how you're feeling, and I'll recommend study approaches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-[80%] rounded-lg p-3 ${message.type === 'user' ? 'bg-[#45A29E] text-white' : 'bg-[#0B0C10] text-[#CFC6C7]'}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)\n      }, `message-${index}-${message.type}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-[#0B0C10] text-[#CFC6C7] rounded-lg p-3 max-w-[80%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\",\n              style: {\n                animationDelay: '0.2s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\",\n              style: {\n                animationDelay: '0.4s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), showRecommendations && recommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#0B0C10] p-4 border-t border-[#45A29E] max-h-[250px] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-[#66FCF1] font-medium mb-3\",\n        children: \"Recommended Resources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), recommendations.videos && recommendations.videos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-[#CFC6C7] text-sm font-medium mb-2\",\n          children: \"Videos for your current mood:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 gap-2\",\n          children: recommendations.videos.slice(0, 2).map(video => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: video.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"flex items-center bg-[#1F2833] rounded p-2 hover:bg-[#1F2833]/80 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-16 h-12 flex-shrink-0 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.thumbnail,\n                alt: video.title,\n                className: \"w-full h-full object-cover rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-[#CFC6C7] text-xs line-clamp-2\",\n                children: video.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 21\n            }, this)]\n          }, `video-${video.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }, this), recommendations.resources && recommendations.resources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-[#CFC6C7] text-sm font-medium mb-2\",\n          children: \"Learning resources:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: recommendations.resources.slice(0, 2).map((resource, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: resource.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"block bg-[#1F2833] rounded p-2 hover:bg-[#1F2833]/80 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-[#CFC6C7] text-xs font-medium\",\n              children: resource.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400 text-xs mt-1\",\n              children: resource.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 21\n            }, this)]\n          }, `resource-${resource.source}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-[#45A29E]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Tell me how you're feeling today...\",\n          className: \"flex-1 bg-[#0B0C10] text-[#CFC6C7] rounded-l-lg p-3 focus:outline-none resize-none\",\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSendMessage,\n          disabled: isLoading || !userInput.trim(),\n          className: \"bg-[#66FCF1] text-[#0B0C10] px-4 rounded-r-lg font-medium hover:bg-[#45A29E] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n};\n_s(AICompanion, \"pojYlQLUAHi4jp+kziR+044UcrU=\");\n_c = AICompanion;\nexport default AICompanion;\nvar _c;\n$RefreshReg$(_c, \"AICompanion\");","map":{"version":3,"names":["React","useState","useEffect","useRef","auth","db","doc","getDoc","analyzeTextMood","fetchCourseContent","getCachedItem","setCachedItem","jsxDEV","_jsxDEV","AICompanion","_s","userCourse","setUserCourse","userInput","setUserInput","messages","setMessages","isLoading","setIsLoading","moodAnalysis","setMoodAnalysis","recommendations","setRecommendations","showRecommendations","setShowRecommendations","conversationContext","setConversationContext","previousMoods","lastResponseType","repetitiveResponseCount","topicsFocused","messagesEndRef","fetchUserCourse","user","currentUser","console","log","userDoc","uid","exists","userData","data","course","error","timeoutId","setTimeout","current","scrollIntoView","behavior","clearTimeout","length","type","text","handleSendMessage","trim","userMessage","prev","analysis","prevContext","updatedPreviousMoods","mood","slice","isRepetitive","repetitiveCount","topicMatches","match","uniqueTopics","Set","content","cacheKey","aiResponse","generateResponse","context","_context$topicsFocuse","description","recommendedApproaches","getRandomResponse","templates","randomIndex","Math","floor","random","responseTemplates","sad","angry","fearful","disgusted","happy","excited","surprised","confused","stressed","neutral","curious","motivated","varietyResponses","response","learningApproaches","previousMood","currentMood","positiveShiftResponses","approach","toLowerCase","negativeShiftResponses","gentleApproaches","topicReference","recentTopic","topicReferences","courseResponses","generalResponses","learningStyle","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","style","animationDelay","ref","videos","video","href","url","target","rel","src","thumbnail","alt","title","id","resources","resource","source","value","onChange","onKeyPress","placeholder","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/Symbtest/src/components/AICompanion.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { auth, db, doc, getDoc } from '../firebase';\nimport { analyzeTextMood } from '../services/textMoodAnalysisService';\nimport { fetchCourseContent } from '../services/courseContentService';\nimport { getCachedItem, setCachedItem } from '../utils/cacheUtil';\n\nconst AICompanion = () => {\n  const [userCourse, setUserCourse] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [moodAnalysis, setMoodAnalysis] = useState(null);\n  const [recommendations, setRecommendations] = useState(null);\n  const [showRecommendations, setShowRecommendations] = useState(false);\n  const [conversationContext, setConversationContext] = useState({\n    previousMoods: [],\n    lastResponseType: null,\n    repetitiveResponseCount: 0,\n    topicsFocused: []\n  });\n  const messagesEndRef = useRef(null);\n\n  // Fetch user's course from Firebase\n  useEffect(() => {\n    const fetchUserCourse = async () => {\n      try {\n        const user = auth.currentUser;\n\n        if (!user) {\n          console.log('No user logged in');\n          return;\n        }\n\n        // Get user data from Firestore\n        const userDoc = await getDoc(doc(db, \"users\", user.uid));\n\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setUserCourse(userData.course || '');\n        } else {\n          console.log('No user data found');\n        }\n      } catch (error) {\n        console.error('Error fetching user course:', error);\n      }\n    };\n\n    fetchUserCourse();\n  }, []);\n\n  // Scroll to bottom of messages when messages change\n  useEffect(() => {\n    // Using a timeout to ensure the DOM has updated\n    const timeoutId = setTimeout(() => {\n      if (messagesEndRef.current) {\n        messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n      }\n    }, 100);\n\n    return () => clearTimeout(timeoutId);\n  }, [messages.length]); // Only depend on the length of messages\n\n  // Initial greeting\n  useEffect(() => {\n    setMessages([\n      {\n        type: 'ai',\n        text: \"Hi there! I'm your AI learning companion. How are you feeling today? Tell me about your mood or what's on your mind, and I'll recommend study approaches that might work best for you right now.\"\n      }\n    ]);\n  }, []);\n\n  // Handle sending a message\n  const handleSendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    const userMessage = {\n      type: 'user',\n      text: userInput\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    setIsLoading(true);\n\n    try {\n      // Analyze the user's mood from their message\n      const analysis = analyzeTextMood(userInput);\n      setMoodAnalysis(analysis);\n\n      // Update conversation context with new mood\n      setConversationContext(prevContext => {\n        const updatedPreviousMoods = [...prevContext.previousMoods, analysis.mood].slice(-3); // Keep last 3 moods\n\n        // Check if we're getting repetitive responses\n        const isRepetitive = prevContext.lastResponseType === analysis.mood;\n        const repetitiveCount = isRepetitive ? prevContext.repetitiveResponseCount + 1 : 0;\n\n        // Extract potential topics from user input\n        const topicMatches = userInput.match(/\\b(study|learn|read|understand|practice|exam|test|quiz|homework|assignment|project|course|class|subject|topic)\\b/gi) || [];\n        const uniqueTopics = [...new Set([...prevContext.topicsFocused, ...topicMatches])].slice(-5); // Keep last 5 topics\n\n        return {\n          previousMoods: updatedPreviousMoods,\n          lastResponseType: analysis.mood,\n          repetitiveResponseCount: repetitiveCount,\n          topicsFocused: uniqueTopics\n        };\n      });\n\n      // Fetch content recommendations based on mood and course\n      let content = null;\n\n      if (userCourse) {\n        try {\n          // Create cache key\n          const cacheKey = `content_${userCourse}_${analysis.mood}`;\n\n          // Check cache first\n          content = getCachedItem(cacheKey);\n\n          if (!content) {\n            // Fetch fresh content\n            content = await fetchCourseContent(userCourse, analysis.mood);\n\n            // Cache the result\n            setCachedItem(cacheKey, content);\n          }\n\n          setRecommendations(content);\n        } catch (error) {\n          console.error('Error fetching recommendations:', error);\n          // Continue even if recommendations fail\n        }\n      }\n\n      // Generate AI response based on mood analysis\n      setTimeout(() => {\n        const aiResponse = generateResponse(analysis, userCourse, conversationContext);\n\n        setMessages(prev => [...prev, {\n          type: 'ai',\n          text: aiResponse\n        }]);\n\n        setIsLoading(false);\n        if (content) {\n          setShowRecommendations(true);\n        }\n      }, 1000);\n    } catch (error) {\n      console.error('Error in message processing:', error);\n\n      // Fallback response for error cases\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          type: 'ai',\n          text: \"I'm having trouble understanding your mood right now. Could you tell me more about how you're feeling?\"\n        }]);\n\n        setIsLoading(false);\n      }, 1000);\n    }\n  };\n\n  // Generate AI response based on mood analysis\n  const generateResponse = (analysis, course, context) => {\n    const { mood, description, recommendedApproaches } = analysis;\n\n    // Get a random response template based on mood\n    const getRandomResponse = (templates) => {\n      const randomIndex = Math.floor(Math.random() * templates.length);\n      return templates[randomIndex];\n    };\n\n    // Response templates for different moods\n    const responseTemplates = {\n      sad: [\n        `I'm sorry to hear that you're feeling down. ${description}`,\n        `It sounds like you're having a tough time. When feeling sad, ${description}`,\n        `I understand that sadness can make studying difficult. ${description}`\n      ],\n      angry: [\n        `I can sense some frustration in your message. ${description}`,\n        `It seems like you might be feeling annoyed or angry. ${description}`,\n        `When we're feeling frustrated, ${description}`\n      ],\n      fearful: [\n        `I notice you might be feeling anxious or worried. ${description}`,\n        `It sounds like you might be experiencing some anxiety. ${description}`,\n        `When feeling uncertain or fearful, ${description}`\n      ],\n      disgusted: [\n        `I sense you're feeling averse to something. ${description}`,\n        `It seems like something might be bothering you. ${description}`,\n        `When feeling put off by something, ${description}`\n      ],\n      happy: [\n        `That's wonderful! I'm glad you're feeling good. ${description}`,\n        `It's great to hear you're in a positive mood! ${description}`,\n        `Your positive energy is perfect for learning. ${description}`\n      ],\n      excited: [\n        `I can feel your enthusiasm! ${description}`,\n        `Your excitement is contagious! ${description}`,\n        `That's great! Your excited state is perfect for tackling challenging material. ${description}`\n      ],\n      content: [\n        `It's nice to hear you're feeling content. ${description}`,\n        `A content state of mind is excellent for thoughtful learning. ${description}`,\n        `Being content creates a great foundation for learning. ${description}`\n      ],\n      surprised: [\n        `Oh! Something unexpected on your mind? ${description}`,\n        `Surprise can lead to new insights! ${description}`,\n        `Interesting! Surprise often opens us to new perspectives. ${description}`\n      ],\n      confused: [\n        `I understand confusion can be frustrating. ${description}`,\n        `When we're confused, it helps to go back to basics. ${description}`,\n        `Confusion is often a step toward deeper understanding. ${description}`\n      ],\n      stressed: [\n        `I can tell you might be feeling overwhelmed. ${description}`,\n        `Stress can make learning challenging. ${description}`,\n        `When we're stressed, it helps to break things down into smaller steps. ${description}`\n      ],\n      neutral: [\n        `I sense you're in a balanced state of mind. ${description}`,\n        `Your neutral mood is actually great for analytical thinking. ${description}`,\n        `A neutral state can be perfect for objective learning. ${description}`\n      ],\n      curious: [\n        `Your curiosity is a powerful learning tool! ${description}`,\n        `I love your inquisitive mindset! ${description}`,\n        `Curiosity drives discovery and learning. ${description}`\n      ],\n      motivated: [\n        `I can sense your motivation! ${description}`,\n        `Your drive to learn is inspiring! ${description}`,\n        `That motivated mindset will take you far! ${description}`\n      ]\n    };\n\n    // Check for repetitive responses\n    if (context && context.repetitiveResponseCount > 1) {\n      // If we've given similar responses multiple times, change the approach\n      const varietyResponses = [\n        `I notice we've been talking about similar moods. Let's try a different approach.`,\n        `Let's explore something new this time.`,\n        `I'd like to offer a fresh perspective on your learning.`\n      ];\n\n      let response = `${getRandomResponse(varietyResponses)} `;\n\n      // Suggest a completely different learning approach\n      const learningApproaches = [\n        \"try a completely different learning environment\",\n        \"consider taking a short break before returning to your studies\",\n        \"experiment with a new study technique like the Pomodoro method\",\n        \"try explaining the concepts to someone else or even to an imaginary student\",\n        \"create visual maps or diagrams of the material\",\n        \"record yourself explaining difficult concepts and listen back\",\n        \"find real-world applications for what you're learning\"\n      ];\n\n      response += `One idea might be to ${learningApproaches[Math.floor(Math.random() * learningApproaches.length)]}. `;\n\n      // Add course-specific information if available\n      if (course) {\n        response += `Would you like me to suggest some specific ${course} resources that align with this approach?`;\n      } else {\n        response += `Would you like to tell me more about what you're studying so I can provide more specific suggestions?`;\n      }\n\n      return response;\n    }\n\n    // Check for mood shifts\n    if (context && context.previousMoods.length > 1 &&\n        context.previousMoods[context.previousMoods.length - 1] !==\n        context.previousMoods[context.previousMoods.length - 2]) {\n\n      const previousMood = context.previousMoods[context.previousMoods.length - 2];\n      const currentMood = mood;\n\n      // If there's been a significant mood shift\n      if ((previousMood === 'sad' || previousMood === 'angry' || previousMood === 'fearful') &&\n          (currentMood === 'happy' || currentMood === 'excited' || currentMood === 'content')) {\n        // Positive shift\n        const positiveShiftResponses = [\n          `I'm glad to see your mood has improved! This positive shift can be great for learning.`,\n          `It's wonderful to see you're feeling better now. This change in mood can open up new learning opportunities.`,\n          `That's a positive change in your mood! Let's take advantage of this energy.`\n        ];\n        let response = `${getRandomResponse(positiveShiftResponses)} `;\n\n        // Add specific learning approach recommendations\n        if (recommendedApproaches && recommendedApproaches.length > 0) {\n          const approach = recommendedApproaches[Math.floor(Math.random() * recommendedApproaches.length)];\n          response += `With this positive energy, you might find it effective to ${approach.toLowerCase()}. `;\n        }\n\n        // Add course-specific information\n        if (course) {\n          response += `I've selected some ${course} resources that can help you maintain this positive momentum.`;\n        } else {\n          response += 'Would you like some specific study suggestions that work well with your current positive state?';\n        }\n\n        return response;\n      }\n      if ((previousMood === 'happy' || previousMood === 'excited' || previousMood === 'content') &&\n          (currentMood === 'sad' || currentMood === 'angry' || currentMood === 'fearful')) {\n        // Negative shift\n        const negativeShiftResponses = [\n          \"I notice your mood seems to have shifted. That's completely normal and happens to everyone.\",\n          \"It seems like your feelings have changed since we last talked. Learning can be affected by these shifts.\",\n          \"I can sense a change in your mood. Let's adjust our approach accordingly.\"\n        ];\n        let response = `${getRandomResponse(negativeShiftResponses)} `;\n\n        // Add gentle suggestions\n        const gentleApproaches = [\n          \"take a short break if you need one\",\n          \"be kind to yourself during challenging moments\",\n          \"break your work into smaller, more manageable pieces\",\n          \"focus on just one small task at a time\",\n          \"remember that it's okay to progress slowly sometimes\"\n        ];\n\n        response += `When your mood changes like this, it can help to ${gentleApproaches[Math.floor(Math.random() * gentleApproaches.length)]}. `;\n\n        // Add course-specific information\n        if (course) {\n          response += `I have some gentle ${course} resources that might be more suitable right now.`;\n        } else {\n          response += `Would you like to share what you're working on? I might be able to suggest some specific approaches.`;\n        }\n\n        return response;\n      }\n    }\n\n    // Reference topics if they've been mentioned before\n    let topicReference = '';\n    if (context?.topicsFocused?.length > 0) {\n      const recentTopic = context.topicsFocused[context.topicsFocused.length - 1];\n      if (recentTopic) {\n        const topicReferences = [\n          `Regarding your interest in ${recentTopic}, `,\n          `Since you mentioned ${recentTopic} earlier, `,\n          `Thinking about ${recentTopic}, `\n        ];\n        topicReference = getRandomResponse(topicReferences);\n      }\n    }\n\n    // Standard response flow\n    const templates = responseTemplates[mood] || responseTemplates.neutral;\n    let response = `${getRandomResponse(templates)} `;\n\n    // Add topic reference if available\n    if (topicReference) {\n      response += topicReference;\n    }\n\n    // Add specific learning approach recommendations\n    if (recommendedApproaches && recommendedApproaches.length > 0) {\n      const approach = recommendedApproaches[Math.floor(Math.random() * recommendedApproaches.length)];\n      response += `One effective approach might be to ${approach.toLowerCase()}. `;\n    }\n\n    // Add course-specific information if available\n    if (course) {\n      const courseResponses = [\n        `Since you're studying ${course}, I've prepared some learning resources that might work well with your current mood.`,\n        `For your ${course} studies, I've found some materials that align with your current learning style.`,\n        `I've selected some ${course} resources that complement how you're feeling right now.`\n      ];\n      response += getRandomResponse(courseResponses);\n    } else {\n      const generalResponses = [\n        `I'd recommend focusing on ${analysis.learningStyle.toLowerCase()} right now. Would you like some specific study suggestions?`,\n        `Given your current state, ${analysis.learningStyle.toLowerCase()} might be most effective. Would you like to explore this approach?`,\n        `This might be a good time for ${analysis.learningStyle.toLowerCase()}. Would you like me to elaborate on this?`\n      ];\n      response += getRandomResponse(generalResponses);\n    }\n\n    return response;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"bg-[#1F2833] rounded-lg overflow-hidden flex flex-col h-[600px]\">\n      {/* Header */}\n      <div className=\"bg-[#0B0C10] p-4 border-b border-[#45A29E]\">\n        <h3 className=\"text-[#66FCF1] font-medium\">AI Learning Companion</h3>\n        <p className=\"text-[#CFC6C7] text-sm\">\n          Share how you're feeling, and I'll recommend study approaches\n        </p>\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message, index) => (\n          <div\n            key={`message-${index}-${message.type}`}\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-[80%] rounded-lg p-3 ${\n                message.type === 'user'\n                  ? 'bg-[#45A29E] text-white'\n                  : 'bg-[#0B0C10] text-[#CFC6C7]'\n              }`}\n            >\n              {message.text}\n            </div>\n          </div>\n        ))}\n\n        {isLoading && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-[#0B0C10] text-[#CFC6C7] rounded-lg p-3 max-w-[80%]\">\n              <div className=\"flex space-x-2\">\n                <div className=\"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\" />\n                <div className=\"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\" style={{ animationDelay: '0.2s' }} />\n                <div className=\"w-2 h-2 rounded-full bg-[#66FCF1] animate-bounce\" style={{ animationDelay: '0.4s' }} />\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Recommendations Section */}\n      {showRecommendations && recommendations && (\n        <div className=\"bg-[#0B0C10] p-4 border-t border-[#45A29E] max-h-[250px] overflow-y-auto\">\n          <h4 className=\"text-[#66FCF1] font-medium mb-3\">Recommended Resources</h4>\n\n          {/* Videos */}\n          {recommendations.videos && recommendations.videos.length > 0 && (\n            <div className=\"mb-3\">\n              <h5 className=\"text-[#CFC6C7] text-sm font-medium mb-2\">Videos for your current mood:</h5>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\n                {recommendations.videos.slice(0, 2).map((video) => (\n                  <a\n                    key={`video-${video.id}`}\n                    href={video.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"flex items-center bg-[#1F2833] rounded p-2 hover:bg-[#1F2833]/80 transition-colors\"\n                  >\n                    <div className=\"w-16 h-12 flex-shrink-0 mr-2\">\n                      <img\n                        src={video.thumbnail}\n                        alt={video.title}\n                        className=\"w-full h-full object-cover rounded\"\n                      />\n                    </div>\n                    <div className=\"flex-1\">\n                      <p className=\"text-[#CFC6C7] text-xs line-clamp-2\">{video.title}</p>\n                    </div>\n                  </a>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Resources */}\n          {recommendations.resources && recommendations.resources.length > 0 && (\n            <div>\n              <h5 className=\"text-[#CFC6C7] text-sm font-medium mb-2\">Learning resources:</h5>\n              <div className=\"space-y-2\">\n                {recommendations.resources.slice(0, 2).map((resource, index) => (\n                  <a\n                    key={`resource-${resource.source}-${index}`}\n                    href={resource.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"block bg-[#1F2833] rounded p-2 hover:bg-[#1F2833]/80 transition-colors\"\n                  >\n                    <p className=\"text-[#CFC6C7] text-xs font-medium\">{resource.title}</p>\n                    <p className=\"text-gray-400 text-xs mt-1\">{resource.source}</p>\n                  </a>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Input */}\n      <div className=\"p-4 border-t border-[#45A29E]\">\n        <div className=\"flex\">\n          <textarea\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Tell me how you're feeling today...\"\n            className=\"flex-1 bg-[#0B0C10] text-[#CFC6C7] rounded-l-lg p-3 focus:outline-none resize-none\"\n            rows=\"2\"\n          />\n          <button\n            type=\"button\"\n            onClick={handleSendMessage}\n            disabled={isLoading || !userInput.trim()}\n            className=\"bg-[#66FCF1] text-[#0B0C10] px-4 rounded-r-lg font-medium hover:bg-[#45A29E] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AICompanion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}